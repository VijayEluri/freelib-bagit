<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<!-- Main messages, used mostly for exceptions -->
	<entry key="bagit.no_bagit">Missing the required bagit.txt file: {}</entry>
	<entry key="bagit.dir_create">Unable to create directory: {}</entry>
	<entry key="bagit.file_delete">Unable to delete file: {}</entry>
	<entry key="bagit.dir_delete">Unable to delete dir: {}</entry>
	<entry key="bagit.not_baginfo">Supplied file isn't a bag-info.txt file: {}</entry>
	<entry key="bagit.baginfo_create">Couldn't create a bag-info.txt file: {}</entry>
	<entry key="bagit.not_found">Bag directory checked for validity doesn't exist</entry>
	<entry key="bagit.no_data">Missing the required data directory</entry>
	<entry key="bagit.invalid_baginfo">Invalid bag-info.txt file: {}; metadata: {}</entry>
	<entry key="bagit.no_baginfo">Missing the bag-info.txt file: {}</entry>
	<entry key="bagit.invalid_bagit">Found bagit.txt file is invalid: {}</entry>
	<entry key="bagit.no_version">Missing required bagit version</entry>
	<entry key="bagit.bad_version">Invalid bagit version</entry>
	<entry key="bagit.no_encoding">Missing required bagit encoding</entry>
	<entry key="bagit.bad_encoding">Invalid bagit encoding</entry>
	<entry key="bagit.bagit_structure">Incorrect number of lines or structure</entry>
	<entry key="bagit.other_reason">Unspecified reason</entry>
	<entry key="bagit.validated">Can't change a bag that has been validated; clone instead</entry>
	<entry key="bagit.cleanup">Cleaning up the bagit work directories: {}</entry>
	<entry key="bagit.cleanup_failed">Failed to remove all the temporary work files</entry>
	<entry key="bagit.not_complete">The {} bag is not yet complete: {}</entry>
	<entry key="bagit.unknown_mime_type">Couldn't read bag '{}' because its MIME type '{}' isn't
		recognized</entry>
	<entry key="bagit.data_file_count">Different number of data files from payload manifest
		entries</entry>
	<entry key="bagit.file_mismatch">Data directory or payload manifest is missing a file</entry>
	<entry key="bagit.tagfile_mismatch">A tag file is missing from the directory: {}</entry>
	<entry key="bagit.invalid_tag_checksum">Invalid tag checksum for: {} ({} vs. {})</entry>
	<entry key="bagit.invalid_data_checksum">Invalid data checksum for: {} ({} vs. {})</entry>
	<entry key="bagit.missing_manifest">Missing the required payload manifest file</entry>
	<entry key="bagit.data_dir">Problem with the bag's data directory</entry>

	<!-- Messages related to debugging -->
	<entry key="bagit.debug.file_count">Data file count: {}; file entries in payload manifest:
	{}</entry>
	<entry key="bagit.debug.oxum_file">Getting {} bytes for oxum from file: {}</entry>
	<entry key="bagit.debug.creating">Creating new Bag object: {}</entry>
	<entry key="bagit.debug.existing">Using bag's existing data files</entry>
	<entry key="bagit.debug.new_dir">Creating new directory: {}</entry>
	<entry key="bagit.debug.metadata">Writing BagInfo metadata [{}: {}]</entry>
	<entry key="bagit.debug.validating">Validating the Bag object</entry>
	<entry key="bagit.debug.completing">Completing the bag structure</entry>
	<entry key="bagit.debug.add_data">Adding a new data file: {}</entry>
	<entry key="bagit.debug.setting_info">Setting a new BagInfo object</entry>
	<entry key="bagit.debug.tagmanifest">Deleting the existing tag manifest: {}</entry>
	<entry key="bagit.debug.manifest">Deleting the existing payload manifest: {}</entry>
	<entry key="bagit.debug.create_manifest">Creating a new payload manifest object</entry>
	<entry key="bagit.debug.tag_manifest">Creating a new tag manifest object</entry>
	<entry key="bagit.debug.create_bagit_txt">Creating a new bagit.txt file</entry>
	<entry key="bagit.debug.reading_manifest">Reading from an existing manifest file: {}</entry>
	<entry key="bagit.debug.reading">Reading: {}</entry>
	<entry key="bagit.debug.data_dir">Instantiating the BagIt data directory</entry>
	<entry key="bagit.debug.mime">Bag '{}' has a '{}' MIME type</entry>
	<entry key="bagit.debug.from_tar_bz2">Unpacking '{}' from tar and bzip2</entry>
	<entry key="bagit.debug.to_tar_bz2">Packaging '{}' with tar and bzip2</entry>
	<entry key="bagit.debug.from_zip">Unpacking '{}' from zip</entry>
	<entry key="bagit.debug.to_zip">Packaging '{}' with zip</entry>
	<entry key="bagit.debug.from_tar">Unpacking '{}' from tar</entry>
	<entry key="bagit.debug.to_tar">Packaging '{}' with tar</entry>
	<entry key="bagit.debug.to_bz2">Compressing '{}' with bzip2</entry>
	<entry key="bagit.debug.to_gz">Compressing '{}' with gz</entry>
	<entry key="bagit.debug.from_tar_gz">Unpacking '{}' from tar and gzip</entry>
	<entry key="bagit.debug.to_tar_gz">Packaging '{}' with tar and gzip</entry>
	<entry key="bagit.debug.tar_delete">Unable to delete temporary tar file: {}</entry>
	<entry key="bagit.debug.writing_tar_entry">Writing tar entry: {}</entry>
	<entry key="bagit.debug.reading_tar_entry">Reading tar entry '{}' to '{}'</entry>
	<entry key="bagit.debug.writing_zip_entry">Writing zip entry: {}</entry>
	<entry key="bagit.debug.reading_zip_entry">Reading zip entry '{}' to '{}'</entry>
	<entry key="bagit.debug.bz2_delete">Unable to delete temporary tar.bz2 file: {}</entry>
	<entry key="bagit.debug.gz_delete">Unable to delete temporary tar.gz file: {}</entry>
	<entry key="bagit.debug.tar_delete">Unable to delete temporary tar file: {}</entry>
	<entry key="bagit.debug.get_new_file">Getting a new file: {}</entry>
	<entry key="bagit.debug.cleaned_up">Getting ready to clean, but '{}' seems to already have been cleaned up</entry>
	<entry key="bagit.debug.finalizing">Finalizing (i.e., garbage collecting) the bag at: {}</entry>
	<entry key="bagit.debug.shutdown_hook">Running the shutdown hook for the bag at: {}</entry>
	<entry key="bagit.debug.paths_found">Number of matching paths found: {}</entry>
	<entry key="bagit.debug.testing_file">Testing {} regex against file names</entry>
	<entry key="bagit.debug.testing_path">Testing {} regex against file paths</entry>
	<entry key="bagit.debug.testing_exts">Testing file extensions {} against file names</entry>

	<!-- Messages related to testing -->
	<entry key="bagit.test.directory">Failed to notice BagIt directory was a file: {}</entry>
	<entry key="bagit.test.tar_written">Tar file written to: {}</entry>
	<entry key="bagit.test.failed_baginfo_delete">Failed to delete created bag-info.txt file:
		{}</entry>
	<entry key="bagit.test.zip_written">Zip file written to: {}</entry>
	<entry key="bagit.test.created_bag">Created bag directory: {}</entry>
	<entry key="bagit.test.starting_test">Starting test: {}</entry>
	<entry key="bagit.test.bag_info_tag">Failed to find expected bag-info tag: {}</entry>
	<entry key="bagit.test.failed_count">Failed to detect difference in data files and payload
		manifest</entry>
	<entry key="bagit.test.failed">Failed for unexpected reason: {}</entry>
	<entry key="bagit.test.file_compare">Comparing data directory files: {} and {}</entry>
	<entry key="bagit.test.expected">Catching expected exception from the BagValidator: {}</entry>
</properties>
